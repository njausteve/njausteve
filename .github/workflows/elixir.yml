name: Elixir CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deps:
    name: Dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: [1.11.3]
        otp: [23.2.3]

    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup
        uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Retrieve Cached Dependencies
        uses: actions/cache@v2
        id: mix-cache
        with:
          path: |
            deps
            _build
            priv/plts
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}

      - name: Install Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
          mix deps.compile
          mix dialyzer --plt

  static_code_analysis:
    runs-on: ubuntu-latest
    needs: deps
    strategy:
      matrix:
        elixir: [1.11.3]
        otp: [23.2.3]

    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup
        uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Retrieve Cached Dependencies
        uses: actions/cache@v2
        id: mix-cache
        with:
          path: |
            deps
            _build
            priv/plts
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}

      - name: Check code format
        run: mix format --check-formatted

      - name: Run credo
        run: mix credo --strict

      - name: Run security analysis
        run: mix sobelow --config

      - name: Run Dialyzer
        run: mix dialyzer --no-check

  unit_tests:
    name: Test
    runs-on: ubuntu-latest
    needs: deps
    strategy:
      fail-fast: false
      matrix:
        elixir: [1.11.3]
        otp: [23.2.3]
    env:
      MIX_ENV: test

    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          DB_HOST: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup
        uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Retrieve Cached Dependencies
        uses: actions/cache@v2
        id: mix-cache
        with:
          path: |
            deps
            _build
            priv/plts
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}

      - name: Run tests
        run: mix coveralls.json
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  publish:
    runs-on: ubuntu-latest
    needs: [unit_tests, static_code_analysis]
    strategy:
      matrix:
        elixir: [1.11.3]
        otp: [23.2.3]

    steps:
      - name: Checkout
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/checkout@v2

      - name: Setup
        if: ${{ github.event_name != 'pull_request' }}
        uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Retrieve Cached Dependencies
        uses: actions/cache@v2
        id: mix-cache
        with:
          path: |
            deps
            _build
            priv/plts
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}

      - name: Publish to DockerHub
        if: ${{ github.event_name != 'pull_request' }}
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: njausteve/njausteve:${{ github.sha }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

  deploy:
    runs-on: ubuntu-latest
    needs: [publish]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          fetch-depth: 0

      - name: Executing remote command
        if: ${{ github.event_name != 'pull_request' }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: docker service update --image njausteve/njausteve:${{ github.sha }} njausteve_app --with-registry-auth
