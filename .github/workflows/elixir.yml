name: Elixir CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          DB_HOST: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Elixir
        uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
        with:
          elixir-version: "1.11.3" # Define the elixir version [required]
          otp-version: "23.2.2" # Define the OTP version [required]
      - name: Install dependencies
        run: mix deps.get
      - name: Run tests
        run: mix test

  publish:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Publish to DockerHub
      - if: github.event_name != 'pull_request'
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: njausteve/njausteve:${{ github.sha }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

  deploy:
    runs-on: ubuntu-latest
    needs: [test, publish]

    steps:
      - uses: actions/checkout@v2
      - if: github.event_name != 'pull_request'
      - name: Executing remote command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          KEY: ${{ secrets.SSHKEY }}
          script: docker service update --image njausteve/njausteve:${{ github.sha }} njausteve_app
